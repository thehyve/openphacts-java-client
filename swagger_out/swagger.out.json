{
  "basePath": "https://ops2.few.vu.nl",
  "apiVersion": "v1.1",
  "apis": [
    {
      "path": "/structure/exact" ,
      "operations": [
        {
          "httpMethod": "GET",
          "summary":  "Chemical Structure Exact Search" ,
          "description":  "Returns a ChemSpider URL corresponding to an input SMILES string. Driven by ChemSpider.<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<hr>Response template: <hr><br> ?primaryTopic <span style=\"BACKGROUND-COLOR: #66FFCC\"> rdf:type ?searchType </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> cs_api_search:Molecule ?moleculeSmiles </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> cs_api:result ?result </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> cs_api_search:MatchType ?searchMatchType </span>; <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> cs_api_common:Complexity ?complexity </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> cs_api_common:Isotopic ?isotopic </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> cs_api_common:HasSpectra ?hasSpectra </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> cs_api_common:HasPatents ?hasPatents </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> cs_api_result:Limit ?limit </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> cs_api_result:Start ?start </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> cs_api_result:Length ?length </span><br><br><hr>",
          "group": "ChemSpider structure search" ,
          "parameters": [
            {
              "name": "app_id",
              "description": "Your access application id",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_ids"
            },
            {
              "name": "app_key",
              "description": "Your access application key",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_keys"
            },
            {
              "name": "searchOptions.Molecule",
              "description":  "A SMILES string. E.g. CNC(=O)c1cc(ccn1)Oc2ccc(cc2)NC(=O)Nc3ccc(c(c3)C(F)(F)F)Cl" ,
              "paramType": "query",
              "required": true,
              "dataType": "string"
            },
            {
              "name": "searchOptions.MatchType",
              "description":  "0: ExactMatch ; 1: AllTautomers ; 2: SameSkeletonIncludingH ; 3: SameSkeletonExcludingH ; 4: AllIsomers" ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name": "commonOptions.Complexity",
              "description":  "(Not supported at the moment) 0: Any ; 1: Single ; 2: Multi" ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name": "commonOptions.Isotopic",
              "description":  "(Not supported at the moment) 0: Any ; 1: Labeled ; 2: NotLabeled" ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name": "commonOptions.HasSpectra",
              "description":  "(Not supported at the moment) Boolean" ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name": "commonOptions.HasPatents",
              "description":  "(Not supported at the moment) Boolean" ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name": "resultOptions.Limit",
              "description":  "Integer" ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name": "resultOptions.Start",
              "description":  "Integer" ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name": "resultOptions.Length",
              "description":  "Integer. How many results should be returned starting from Start index. Default value: -1." ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name": "_format",
              "description": "The desired result format.",
              "allowableValues": {
                "values": [
                  "json",
                  "tsv",
                  "ttl",
                  "xml",
                  "rdf",
                  "rdfjson",
                  "html"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "callback",
              "description": "For JSONP",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "_metadata",
              "description": "Additional metadata to be included with response.",
              "allowableValues": {
                "values": [
                  "execution",
                  "site",
                  "formats",
                  "views",
                  "all"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            }
          ]
        }
      ]
    },
    {
      "path": "/structure" ,
      "operations": [
        {
          "httpMethod": "GET",
          "summary":  "InchiKey to URL" ,
          "description":  "Returns a ChemSpider URL corresponding to an input InChIKey string. Driven by ChemSpider.<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<hr>Response template: <hr><br> ?primaryTopic <span style=\"BACKGROUND-COLOR: #66FFCC\"> chemspider:inchikey ?inchi_key </span><br><br><hr>",
          "group": "ChemSpider structure search" ,
          "parameters": [
            {
              "name": "app_id",
              "description": "Your access application id",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_ids"
            },
            {
              "name": "app_key",
              "description": "Your access application key",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_keys"
            },
            {
              "name":  "inchi_key" ,
              "description":  "An InChIKey string. E.g. BSYNRYMUTXBXSQ-UHFFFAOYSA-N" ,
              "paramType": "query",
              "required": true,
              "dataType": "string"
            },
            {
              "name": "_format",
              "description": "The desired result format.",
              "allowableValues": {
                "values": [
                  "json",
                  "tsv",
                  "ttl",
                  "xml",
                  "rdf",
                  "rdfjson",
                  "html"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "callback",
              "description": "For JSONP",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "_metadata",
              "description": "Additional metadata to be included with response.",
              "allowableValues": {
                "values": [
                  "execution",
                  "site",
                  "formats",
                  "views",
                  "all"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            }
          ]
        }
      ]
    },
    {
      "path": "/structure" ,
      "operations": [
        {
          "httpMethod": "GET",
          "summary":  "Inchi to URL" ,
          "description":  "Returns a ChemSpider URL corresponding to an input InChI string. Driven by ChemSpider.<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<hr>Response template: <hr><br> ?primaryTopic <span style=\"BACKGROUND-COLOR: #66FFCC\"> chemspider:inchi ?inchi </span><br><br><hr>",
          "group": "ChemSpider structure search" ,
          "parameters": [
            {
              "name": "app_id",
              "description": "Your access application id",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_ids"
            },
            {
              "name": "app_key",
              "description": "Your access application key",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_keys"
            },
            {
              "name":  "inchi" ,
              "description":  "An InChI string. E.g. InChI=1S/C9H8O4/c1-6(10)13-8-5-3-2-4-7(8)9(11)12/h2-5H,1H3,(H,11,12)" ,
              "paramType": "query",
              "required": true,
              "dataType": "string"
            },
            {
              "name": "_format",
              "description": "The desired result format.",
              "allowableValues": {
                "values": [
                  "json",
                  "tsv",
                  "ttl",
                  "xml",
                  "rdf",
                  "rdfjson",
                  "html"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "callback",
              "description": "For JSONP",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "_metadata",
              "description": "Additional metadata to be included with response.",
              "allowableValues": {
                "values": [
                  "execution",
                  "site",
                  "formats",
                  "views",
                  "all"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            }
          ]
        }
      ]
    },
    {
      "path": "/structure/similarity" ,
      "operations": [
        {
          "httpMethod": "GET",
          "summary":  "Chemical Structure Similarity Search" ,
          "description":  "Returns a set of ChemSpider compound URLs, similar to the input molecule according to the specified algorithm and threshold. Driven by ChemSpider.<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<hr>Response template: <hr><br> ?primaryTopic <span style=\"BACKGROUND-COLOR: #66FFCC\"> rdf:type ?searchType </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> cs_api_search:Molecule ?inputMoleculeSmiles </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #33CC99\"> cs_api:result ?similarMolecule </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> cs_api_search:Threshold ?searchThreshold </span>; <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> cs_api_search:SimilarityType ?searchSimilarityType </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> cs_api_common:Complexity ?complexity </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> cs_api_common:Isotopic ?isotopic </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> cs_api_common:HasSpectra ?hasSpectra </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> cs_api_common:HasPatents ?hasPatents </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> cs_api_result:Limit ?limit </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> cs_api_result:Start ?start </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> cs_api_result:Length ?length </span><br><br><hr>",
          "group": "ChemSpider structure search" ,
          "parameters": [
            {
              "name": "app_id",
              "description": "Your access application id",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_ids"
            },
            {
              "name": "app_key",
              "description": "Your access application key",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_keys"
            },
            {
              "name": "searchOptions.Molecule",
              "description":  "A SMILES string. E.g. CC(=O)Oc1ccccc1C(=O)O" ,
              "paramType": "query",
              "required": true,
              "dataType": "string"
            },
            {
              "name": "searchOptions.SimilarityType",
              "description":  "0: Tanimoto ; 1: Tversky ; 2: Euclidian" ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name": "searchOptions.Threshold",
              "description":  "Double <= 1.0" ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name": "commonOptions.Complexity",
              "description":  "(Not supported at the moment) 0: Any ; 1: Single ; 2: Multi" ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name": "commonOptions.Isotopic",
              "description":  "(Not supported at the moment) 0: Any ; 1: Labeled ; 2: NotLabeled" ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name": "commonOptions.HasSpectra",
              "description":  "(Not supported at the moment) Boolean" ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name": "commonOptions.HasPatents",
              "description":  "(Not supported at the moment) Boolean" ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name": "searchResultOptions.Limit",
              "description":  "Integer. Search limit. Specefy how many results return back during the search. Default value: -1 ." ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name": "searchResultOptions.Start",
              "description":  "Integer. Return results starting the index. Default value: 0" ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name": "searchResultOptions.Length",
              "description":  "Integer. How many results should be returned starting from Start index. Default value: -1." ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name": "_format",
              "description": "The desired result format.",
              "allowableValues": {
                "values": [
                  "json",
                  "tsv",
                  "ttl",
                  "xml",
                  "rdf",
                  "rdfjson",
                  "html"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "callback",
              "description": "For JSONP",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "_metadata",
              "description": "Additional metadata to be included with response.",
              "allowableValues": {
                "values": [
                  "execution",
                  "site",
                  "formats",
                  "views",
                  "all"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            }
          ]
        }
      ]
    },
    {
      "path": "/structure" ,
      "operations": [
        {
          "httpMethod": "GET",
          "summary":  "SMILES to URL" ,
          "description":  "Returns a ChemSpider URL corresponding to an input SMILES string. Driven by ChemSpider.<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<hr>Response template: <hr><br> ?primaryTopic <span style=\"BACKGROUND-COLOR: #66FFCC\"> chemspider:smiles ?smiles </span><br><br><hr>",
          "group": "ChemSpider structure search" ,
          "parameters": [
            {
              "name": "app_id",
              "description": "Your access application id",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_ids"
            },
            {
              "name": "app_key",
              "description": "Your access application key",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_keys"
            },
            {
              "name":  "smiles" ,
              "description":  "A SMILES string. E.g. CC(=O)Oc1ccccc1C(=O)O" ,
              "paramType": "query",
              "required": true,
              "dataType": "string"
            },
            {
              "name": "_format",
              "description": "The desired result format.",
              "allowableValues": {
                "values": [
                  "json",
                  "tsv",
                  "ttl",
                  "xml",
                  "rdf",
                  "rdfjson",
                  "html"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "callback",
              "description": "For JSONP",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "_metadata",
              "description": "Additional metadata to be included with response.",
              "allowableValues": {
                "values": [
                  "execution",
                  "site",
                  "formats",
                  "views",
                  "all"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            }
          ]
        }
      ]
    },
    {
      "path": "/structure/substructure" ,
      "operations": [
        {
          "httpMethod": "GET",
          "summary":  "Chemical Structure Substructure Search" ,
          "description":  "Returns a set of ChemSpider compound URLs that contain the specified structure. Driven by ChemSpider.<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<hr>Response template: <hr><br> ?primaryTopic <span style=\"BACKGROUND-COLOR: #66FFCC\"> rdf:type ?searchType </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> cs_api_search:Molecule ?inputMoleculeSmiles </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #33CC99\"> cs_api:result ?resultMolecule </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> cs_api_search:MatchTautomers ?searchMatchTautomers </span>; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> cs_api_common:Complexity ?complexity </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> cs_api_common:Isotopic ?isotopic </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> cs_api_common:HasSpectra ?hasSpectra </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> cs_api_common:HasPatents ?hasPatents </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> cs_api_result:Limit ?limit </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> cs_api_result:Start ?start </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> cs_api_result:Length ?length </span><br><br><hr>",
          "group": "ChemSpider structure search" ,
          "parameters": [
            {
              "name": "app_id",
              "description": "Your access application id",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_ids"
            },
            {
              "name": "app_key",
              "description": "Your access application key",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_keys"
            },
            {
              "name": "searchOptions.Molecule",
              "description":  "A SMILES string. E.g. CC(=O)Oc1ccccc1C(=O)O" ,
              "paramType": "query",
              "required": true,
              "dataType": "string"
            },
            {
              "name": "searchOptions.MatchTautomers",
              "description":  "(Not supported at the moment) Search exactly for the given tautomeric form and ignore others. Not supported at the moment . Boolean" ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name": "commonOptions.Complexity",
              "description":  "(Not supported at the moment) 0: Any ; 1: Single ; 2: Multi" ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name": "commonOptions.Isotopic",
              "description":  "(Not supported at the moment) 0: Any ; 1: Labeled ; 2: NotLabeled" ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name": "commonOptions.HasSpectra",
              "description":  "(Not supported at the moment) Boolean" ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name": "commonOptions.HasPatents",
              "description":  "(Not supported at the moment) Boolean" ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name": "searchResultOptions.Limit",
              "description":  "Integer. Search limit. Specify how many results return back during the search. Default value: -1 ." ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name": "searchResultOptions.Start",
              "description":  "Integer. Return results starting the index. Default value: 0" ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name": "searchResultOptions.Length",
              "description":  "Integer. How many results should be returned starting from Start index. Default value: -1." ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name": "_format",
              "description": "The desired result format.",
              "allowableValues": {
                "values": [
                  "json",
                  "tsv",
                  "ttl",
                  "xml",
                  "rdf",
                  "rdfjson",
                  "html"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "callback",
              "description": "For JSONP",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "_metadata",
              "description": "Additional metadata to be included with response.",
              "allowableValues": {
                "values": [
                  "execution",
                  "site",
                  "formats",
                  "views",
                  "all"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            }
          ]
        }
      ]
    },
    {
      "path": "/getConceptDescription" ,
      "operations": [
        {
          "httpMethod": "GET",
          "summary":  "Get concept description" ,
          "description":  "Get the description of a concept, based on a concept URL. Driven by ConceptWiki.<hr>",
          "group": "Concept Wiki services" ,
          "parameters": [
            {
              "name": "app_id",
              "description": "Your access application id",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_ids"
            },
            {
              "name": "app_key",
              "description": "Your access application key",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_keys"
            },
            {
              "name":  "uuid" ,
              "description":  "UUID of the concept; required. E.g. 8e3a87ae-345d-4c25-bd7a-5b3221c6e3fa" ,
              "paramType": "query",
              "required": true,
              "dataType": "string"
            },
            {
              "name": "_format",
              "description": "The desired result format.",
              "allowableValues": {
                "values": [
                  "json",
                  "tsv",
                  "ttl",
                  "xml",
                  "rdf",
                  "rdfjson",
                  "html"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "callback",
              "description": "For JSONP",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "_metadata",
              "description": "Additional metadata to be included with response.",
              "allowableValues": {
                "values": [
                  "execution",
                  "site",
                  "formats",
                  "views",
                  "all"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            }
          ]
        }
      ]
    },
    {
      "path": "/search/byTag" ,
      "operations": [
        {
          "httpMethod": "GET",
          "summary":  "Map free text to a concept URL based on semantic tag" ,
          "description":  "Search for a set of concept URLs based on free text and an input tag, which specifies the semantic type. Driven by ConceptWiki.<hr>",
          "group": "Concept Wiki services" ,
          "parameters": [
            {
              "name": "app_id",
              "description": "Your access application id",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_ids"
            },
            {
              "name": "app_key",
              "description": "Your access application key",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_keys"
            },
            {
              "name":  "q" ,
              "description":  "Query; required. Minimum length is 3 characters. E.g. water" ,
              "paramType": "query",
              "required": true,
              "dataType": "string"
            },
            {
              "name":  "limit" ,
              "description":  "Limits the number of results; optional. Minimum value is 1, maximum value is common sense. Default value is 10." ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name":  "uuid" ,
              "description":  "UUID of the tag concept; required. Specifies the 'semantic type' required for the search results. E.g. 07a84994-e464-4bbf-812a-a4b96fa3d197" ,
              "paramType": "query",
              "required": true,
              "dataType": "string"
            },
            {
              "name": "_format",
              "description": "The desired result format.",
              "allowableValues": {
                "values": [
                  "json",
                  "tsv",
                  "ttl",
                  "xml",
                  "rdf",
                  "rdfjson",
                  "html"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "callback",
              "description": "For JSONP",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "_metadata",
              "description": "Additional metadata to be included with response.",
              "allowableValues": {
                "values": [
                  "execution",
                  "site",
                  "formats",
                  "views",
                  "all"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            }
          ]
        }
      ]
    },
    {
      "path": "/search/freetext" ,
      "operations": [
        {
          "httpMethod": "GET",
          "summary":  "Map free text to a concept URL" ,
          "description":  "Returns a set of concept URLs associated to the input free text. Driven by ConceptWiki.<hr>",
          "group": "Concept Wiki services" ,
          "parameters": [
            {
              "name": "app_id",
              "description": "Your access application id",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_ids"
            },
            {
              "name": "app_key",
              "description": "Your access application key",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_keys"
            },
            {
              "name":  "q" ,
              "description":  "Query; required. Mininum length is 3 characters. E.g. water" ,
              "paramType": "query",
              "required": true,
              "dataType": "string"
            },
            {
              "name":  "limit" ,
              "description":  "Limits the number of results; optional. Minimum value is 1, maximum value is common sense. Default value is 10." ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name": "_format",
              "description": "The desired result format.",
              "allowableValues": {
                "values": [
                  "json",
                  "tsv",
                  "ttl",
                  "xml",
                  "rdf",
                  "rdfjson",
                  "html"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "callback",
              "description": "For JSONP",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "_metadata",
              "description": "Additional metadata to be included with response.",
              "allowableValues": {
                "values": [
                  "execution",
                  "site",
                  "formats",
                  "views",
                  "all"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            }
          ]
        }
      ]
    },
    {
      "path": "/mapURL" ,
      "operations": [
        {
          "httpMethod": "GET",
          "summary":  "Map URLs" ,
          "description":  "Returns a set of URLs associated to the input URL.<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<hr>Response template: <hr><br> ?primaryTopic <span style=\"BACKGROUND-COLOR: #33CC99\"> skos:exactMatch ?url </span><br><br><hr>",
          "group": "Mapping service betweem URLs" ,
          "parameters": [
            {
              "name": "app_id",
              "description": "Your access application id",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_ids"
            },
            {
              "name": "app_key",
              "description": "Your access application key",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_keys"
            },
            {
              "name":  "URL" ,
              "description":  "An input URL to be mapped." ,
              "paramType": "query",
              "required": true,
              "dataType": "string"
            },
            {
              "name":  "targetURISpace" ,
              "description":  "List of URI spaces separated by '|' characters. Restricts the results to targets in this/these URISpace(s). The URI space of a URL is the one defined when the mapping is loaded. E.g. http://www.conceptwiki.org/concept/" ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name": "_format",
              "description": "The desired result format.",
              "allowableValues": {
                "values": [
                  "json",
                  "tsv",
                  "ttl",
                  "xml",
                  "rdf",
                  "rdfjson",
                  "html"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "callback",
              "description": "For JSONP",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "_metadata",
              "description": "Additional metadata to be included with response.",
              "allowableValues": {
                "values": [
                  "execution",
                  "site",
                  "formats",
                  "views",
                  "all"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            }
          ]
        }
      ]
    },
    {
      "path": "/compound/chebi/members" ,
      "operations": [
        {
          "httpMethod": "GET",
          "summary":  "Get ChEBI Ontology Class Members" ,
          "description":  "A representation of all members of a given ChEBI Ontology Class.<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<hr>Response template: <hr><br> ?ops_item <span style=\"BACKGROUND-COLOR: #33CC99\"> ops:has_member ?member </span>.<br> ?member <span style=\"BACKGROUND-COLOR: #66FFCC\"> rdfs:label ?member_name </span><br><br><hr>",
          "group": "ChEBI Ontology" ,
          "parameters": [
            {
              "name":  "uri" ,
              "description":  "A ChEBI Class URI. e.g. http://purl.obolibrary.org/obo/CHEBI_38834" ,
              "dataType": "string",
              "required": true,
              "paramType": "query"
            },
            {
              "name": "app_id",
              "description": "Your access application id",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_ids"
            },
            {
              "name": "app_key",
              "description": "Your access application key",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_keys"
            },
            {
              "name": "_format",
              "description": "The desired result format.",
              "allowableValues": {
                "values": [
                  "json",
                  "tsv",
                  "ttl",
                  "xml",
                  "rdf",
                  "rdfjson",
                  "html"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "callback",
              "description": "For JSONP",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "_metadata",
              "description": "Additional metadata to be included with response.",
              "allowableValues": {
                "values": [
                  "execution",
                  "site",
                  "formats",
                  "views",
                  "all"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            }
          ]
        }
      ]
    },
    {
      "path": "/compound/chebi/root" ,
      "operations": [
        {
          "httpMethod": "GET",
          "summary":  "Get ChEBI Ontology Root Classes" ,
          "description":  "A representation of the root classes of the ChEBI Ontology.<hr>",
          "group": "ChEBI Ontology" ,
          "parameters": [
            {
              "name": "app_id",
              "description": "Your access application id",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_ids"
            },
            {
              "name": "app_key",
              "description": "Your access application key",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_keys"
            },
            {
              "name": "_format",
              "description": "The desired result format.",
              "allowableValues": {
                "values": [
                  "json",
                  "tsv",
                  "ttl",
                  "xml",
                  "rdf",
                  "rdfjson",
                  "html"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "callback",
              "description": "For JSONP",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "_metadata",
              "description": "Additional metadata to be included with response.",
              "allowableValues": {
                "values": [
                  "execution",
                  "site",
                  "formats",
                  "views",
                  "all"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            }
          ]
        }
      ]
    },
    {
      "path": "/compound/chebi/node" ,
      "operations": [
        {
          "httpMethod": "GET",
          "summary":  "Get ChEBI Ontology Class" ,
          "description":  "A representation of a given ChEBI Ontology Class, its parent and siblings.<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<hr>Response template: <hr><br> ?ops_item <span style=\"BACKGROUND-COLOR: #33CC99\"> rdfs:subClassOf ?parent </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> rdfs:label ?item_name </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #33CC99\"> ops:sibling ?sibling </span>.<br> ?sibling <span style=\"BACKGROUND-COLOR: #66FFCC\"> rdfs:label ?sibling_name </span>.<br> ?parent <span style=\"BACKGROUND-COLOR: #66FFCC\"> rdfs:label ?parent_name</span><br><br><hr>",
          "group": "ChEBI Ontology" ,
          "parameters": [
            {
              "name":  "uri" ,
              "description":  "A ChEBI Class URI. e.g.: http://purl.obolibrary.org/obo/CHEBI_38834" ,
              "dataType": "string",
              "required": true,
              "paramType": "query"
            },
            {
              "name": "app_id",
              "description": "Your access application id",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_ids"
            },
            {
              "name": "app_key",
              "description": "Your access application key",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_keys"
            },
            {
              "name": "_format",
              "description": "The desired result format.",
              "allowableValues": {
                "values": [
                  "json",
                  "tsv",
                  "ttl",
                  "xml",
                  "rdf",
                  "rdfjson",
                  "html"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "callback",
              "description": "For JSONP",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "_metadata",
              "description": "Additional metadata to be included with response.",
              "allowableValues": {
                "values": [
                  "execution",
                  "site",
                  "formats",
                  "views",
                  "all"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            }
          ]
        }
      ]
    },
    {
      "path": "/compound/chebi/pharmacology/count" ,
      "operations": [
        {
          "httpMethod": "GET",
          "summary":  "ChEBI Class Pharmacology Count" ,
          "description":  "The total number of acitivity values in the LDC for a given ChEBI Ontology class.<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<hr>Response template: <hr><br> ?ops_item <span style=\"BACKGROUND-COLOR: #66FFCC\"> ops:chebiPharmacologyTotalResults ?count </span><br><br><hr>",
          "group": "ChEBI Ontology" ,
          "parameters": [
            {
              "name":  "uri" ,
              "description":  "A ChEBI Class URI. e.g.: http://purl.obolibrary.org/obo/CHEBI_38834" ,
              "dataType": "string",
              "required": true,
              "paramType": "query"
            },
            {
              "name": "app_id",
              "description": "Your access application id",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_ids"
            },
            {
              "name": "app_key",
              "description": "Your access application key",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_keys"
            },
            {
              "name":  "assay_organism" ,
              "description":  "A literal organism in ChEMBL." ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name":  "activity_type" ,
              "description":  "One of the activity types listed at /pharmacology/filters/activities" ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name":  "activity_value" ,
              "description":  "Return activity values equal to this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "min-activity_value" ,
              "description":  "Return activity values greater than or equal to this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "minEx-activity_value" ,
              "description":  "Return activity values greater than this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "max-activity_value" ,
              "description":  "Return activity values less than or equal to this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "maxEx-activity_value" ,
              "description":  "Return activity values less than this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "activity_unit" ,
              "description":  "The unit in which {activity_value} is given. See /pharmacology/filters/units/{activity_type} for allowed valued. For e.g. IC50: /pharmacology/filters/units/IC50" ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name": "_format",
              "description": "The desired result format.",
              "allowableValues": {
                "values": [
                  "json",
                  "tsv",
                  "ttl",
                  "xml",
                  "rdf",
                  "rdfjson",
                  "html"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "callback",
              "description": "For JSONP",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "_metadata",
              "description": "Additional metadata to be included with response.",
              "allowableValues": {
                "values": [
                  "execution",
                  "site",
                  "formats",
                  "views",
                  "all"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            }
          ]
        }
      ]
    },
    {
      "path": "/compound/chebi/pharmacology" ,
      "operations": [
        {
          "httpMethod": "GET",
          "summary":  "ChEBI Class Pharmacology Complete (DEPRECATED)" ,
          "description":  "A complete representation of acitivity values in the LDC for a given ChEBI Ontology class. Potentially very large result.<hr>",
          "group": "ChEBI Ontology" ,
          "parameters": [
            {
              "name":  "uri" ,
              "description":  "A ChEBI Class URI. e.g.: http://purl.obolibrary.org/obo/CHEBI_38834" ,
              "dataType": "string",
              "required": true,
              "paramType": "query"
            },
            {
              "name": "app_id",
              "description": "Your access application id",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_ids"
            },
            {
              "name": "app_key",
              "description": "Your access application key",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_keys"
            },
            {
              "name":  "assay_organism" ,
              "description":  "A literal organism in ChEMBL." ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name":  "activity_type" ,
              "description":  "One of the activity types listed at /pharmacology/filters/activities" ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name":  "activity_value" ,
              "description":  "Return activity values equal to this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "min-activity_value" ,
              "description":  "Return activity values greater than or equal to this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "minEx-activity_value" ,
              "description":  "Return activity values greater than this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "max-activity_value" ,
              "description":  "Return activity values less than or equal to this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "maxEx-activity_value" ,
              "description":  "Return activity values less than this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "activity_unit" ,
              "description":  "The unit in which {activity_value} is given. See /pharmacology/filters/units/{activity_type} for allowed valued. For e.g. IC50: /pharmacology/filters/units/IC50" ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name": "_format",
              "description": "The desired result format.",
              "allowableValues": {
                "values": [
                  "json",
                  "tsv",
                  "ttl",
                  "xml",
                  "rdf",
                  "rdfjson",
                  "html"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "callback",
              "description": "For JSONP",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "_metadata",
              "description": "Additional metadata to be included with response.",
              "allowableValues": {
                "values": [
                  "execution",
                  "site",
                  "formats",
                  "views",
                  "all"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            }
          ]
        }
      ]
    },
    {
      "path": "/compound/chebi/pharmacology/pages" ,
      "operations": [
        {
          "httpMethod": "GET",
          "summary":  "ChEBI Ontology Class Pharmacology Paginated" ,
          "description":  "A page of items corresponding to acitivity values for a given ChEBI Ontology class<br> &nbsp;&nbsp;&nbsp;&nbsp;<hr>Response template: <hr><br> [] <span style=\"BACKGROUND-COLOR: #66FFCC\"> ops:input ?ops_item </span>.<br> ?item <span style=\"BACKGROUND-COLOR: #66FFCC\"> chembl:forMolecule ?equiv_compound</span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> chembl:type ?std_type</span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> chembl:relation ?relation</span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> chembl:standardValue ?std_value</span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> chembl:standardUnits ?std_unit</span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> chembl:onAssay ?equiv_assay </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> chembl-ops:normalisedValue ?activity_value </span>;<br>         <span style=\"BACKGROUND-COLOR: #FFCC99\"> cito:citesAsDataSource ?doi </span>;<br>         <span style=\"BACKGROUND-COLOR: #FFCC99\"> bibo:pmid ?pmid </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> void:inDataset &lt;http://data.kasabi.com/dataset/chembl-rdf&gt; </span>.<br> ?equiv_assay <span style=\"BACKGROUND-COLOR: #33CC99\"> chembl:hasTarget ?equiv_target </span>;<br>         <span style=\"BACKGROUND-COLOR: #FFFFCC\"> chembl:organism ?assay_organism </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> chembl:hasDescription ?assay_description </span>;<br>         <span style=\"BACKGROUND-COLOR: #66FFCC\"> void:inDataset &lt;http://data.kasabi.com/dataset/chembl-rdf&gt; </span>.<br> ?equiv_target <span style=\"BACKGROUND-COLOR: #FFFFCC\"> dc:title ?target_name </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> ops:target_organism ?target_organism </span>. <br> ?equiv_compound <span style=\"BACKGROUND-COLOR: #66FFCC\"> skos:exactMatch ?compound_cw </span>.<br> ?compound_cw <span style=\"BACKGROUND-COLOR: #66FFCC\"> skos:prefLabel ?compound_name </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> void:inDataset &lt;http://www.conceptwiki.org/&gt; </span>.<br> ?equiv_compound <span style=\"BACKGROUND-COLOR: #66FFCC\"> skos:exactMatch ?compound_cs </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #33CC99\"> skos:exactMatch ?class </span>.<br> ?compound_cs <span style=\"BACKGROUND-COLOR: #66FFCC\"> chemspider:smiles ?smiles </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> chemspider:inchi ?inchi </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> chemspider:inchikey ?inchiKey</span>;<br>         <span style=\"BACKGROUND-COLOR: #FFFFCC\"> ops:ro5_violations ?num_ro5_violations </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> void:inDataset &lt;http://rdf.chemspider.com/&gt; </span>.<br> ?equiv_compound <span style=\"BACKGROUND-COLOR: #FFFFCC\"> ?bNode1 ?molweight </span>;<br> <span style=\"BACKGROUND-COLOR: #66FFCC\"> void:inDataset &lt;http://data.kasabi.com/dataset/chembl-rdf&gt; </span><br><br><hr>",
          "group": "ChEBI Ontology" ,
          "parameters": [
            {
              "name":  "uri" ,
              "description":  "A ChEBI Class URI. e.g.: http://purl.obolibrary.org/obo/CHEBI_38834" ,
              "dataType": "string",
              "required": true,
              "paramType": "query"
            },
            {
              "name": "app_id",
              "description": "Your access application id",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_ids"
            },
            {
              "name": "app_key",
              "description": "Your access application key",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_keys"
            },
            {
              "name":  "assay_organism" ,
              "description":  "A literal organism in ChEMBL." ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name":  "activity_type" ,
              "description":  "One of the activity types listed at /pharmacology/filters/activities" ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name":  "activity_value" ,
              "description":  "Return activity values equal to this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "min-activity_value" ,
              "description":  "Return activity values greater than or equal to this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "minEx-activity_value" ,
              "description":  "Return activity values greater than this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "max-activity_value" ,
              "description":  "Return activity values less than or equal to this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "maxEx-activity_value" ,
              "description":  "Return activity values less than this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "activity_unit" ,
              "description":  "The unit in which {activity_value} is given. See /pharmacology/filters/units/{activity_type} for allowed valued. For e.g. IC50: /pharmacology/filters/units/IC50" ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name": "_page",
              "description": "A number; the page that should be viewed",
              "dataType": "integer",
              "paramType": "query"
            },
            {
              "name": "_pageSize",
              "description": "The desired page size. Set to all to retrieve all results in a single page.",
              "dataType": "integer",
              "paramType": "query"
            },
            {
              "name": "_orderBy",
              "description": "The desired variable to sort by. Multiple values can be specified seperated by spaces. Direction of sort can be specified with ASC(?var) and DESC(?var). Default is ascending",
              "allowableValues": {
                "values": [
                  "?activity_value",
                  "DESC(?activity_value)",
                  "?assay_description",
                  "DESC(?assay_description)",
                  "?assay_organism",
                  "DESC(?assay_organism)",
                  "?assay_uri",
                  "DESC(?assay_uri)",
                  "?bNode1",
                  "DESC(?bNode1)",
                  "?class",
                  "DESC(?class)",
                  "?compound_chembl",
                  "DESC(?compound_chembl)",
                  "?compound_cs",
                  "DESC(?compound_cs)",
                  "?compound_cw",
                  "DESC(?compound_cw)",
                  "?compound_name",
                  "DESC(?compound_name)",
                  "?doi",
                  "DESC(?doi)",
                  "?doi_internal",
                  "DESC(?doi_internal)",
                  "?equiv_assay",
                  "DESC(?equiv_assay)",
                  "?equiv_compound",
                  "DESC(?equiv_compound)",
                  "?equiv_compound</span>",
                  "DESC(?equiv_compound</span>)",
                  "?equiv_target",
                  "DESC(?equiv_target)",
                  "?inchi",
                  "DESC(?inchi)",
                  "?inchiKey",
                  "DESC(?inchiKey)",
                  "?inchiKey</span>",
                  "DESC(?inchiKey</span>)",
                  "?item",
                  "DESC(?item)",
                  "?molweight",
                  "DESC(?molweight)",
                  "?num_ro5_violations",
                  "DESC(?num_ro5_violations)",
                  "?ops_item",
                  "DESC(?ops_item)",
                  "?pmid",
                  "DESC(?pmid)",
                  "?relation",
                  "DESC(?relation)",
                  "?relation</span>",
                  "DESC(?relation</span>)",
                  "?smiles",
                  "DESC(?smiles)",
                  "?std_type",
                  "DESC(?std_type)",
                  "?std_type</span>",
                  "DESC(?std_type</span>)",
                  "?std_unit",
                  "DESC(?std_unit)",
                  "?std_unit</span>",
                  "DESC(?std_unit</span>)",
                  "?std_value",
                  "DESC(?std_value)",
                  "?std_value</span>",
                  "DESC(?std_value</span>)",
                  "?target_name",
                  "DESC(?target_name)",
                  "?target_organism",
                  "DESC(?target_organism)",
                  "?target_uri",
                  "DESC(?target_uri)"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "_format",
              "description": "The desired result format.",
              "allowableValues": {
                "values": [
                  "json",
                  "tsv",
                  "ttl",
                  "xml",
                  "rdf",
                  "rdfjson",
                  "html"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "callback",
              "description": "For JSONP",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "_metadata",
              "description": "Additional metadata to be included with response.",
              "allowableValues": {
                "values": [
                  "execution",
                  "site",
                  "formats",
                  "views",
                  "all"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            }
          ]
        }
      ]
    },
    {
      "path": "/compound" ,
      "operations": [
        {
          "httpMethod": "GET",
          "summary":  "Compound Information" ,
          "description":  "Returns information about a single compound that corresponds to {uri}.<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<hr>Response template: <hr><br> ?ops_item <span style=\"BACKGROUND-COLOR: #66FFCC\"> skos:exactMatch ?cw_uri </span>.<br> ?cw_uri <span style=\"BACKGROUND-COLOR: #66FFCC\"> skos:prefLabel ?compound_name </span>;<br> <span style=\"BACKGROUND-COLOR: #66FFCC\"> void:inDataset &lt;http://www.conceptwiki.org&gt; </span>.<br> ?ops_item <span style=\"BACKGROUND-COLOR: #66FFCC\"> skos:exactMatch ?cs_uri </span>.<br> ?cs_uri <span style=\"BACKGROUND-COLOR: #66FFCC\"> chemspider:smiles ?smiles </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> chemspider:inchi ?inchi </span>;<br>         <span style=\"BACKGROUND-COLOR: #66FFCC\"> chemspider:inchikey ?inchiKey </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> ops:logp ?alogp </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> ops:hba ?hba </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> ops:hbd ?hbd </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> ops:ro5_violations ?num_ro5_violations </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> ops:psa ?psa</span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> void:inDataset &lt;http://www.chemspider.com&gt; </span>.<br> ?ops_item <span style=\"BACKGROUND-COLOR: #66FFCC\"> skos:exactMatch ?equiv_compound </span>. <br> ?equiv_compound <span style=\"BACKGROUND-COLOR: #FFFFCC\"> ?bNode1 ?molformula </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> ?bNode2 ?molweight </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> ?bNode3 ?mw_freebase </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> ?bNode4 ?rtb </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> void:inDataset &lt;http://data.kasabi.com/dataset/chembl-rdf&gt;</span>.<br> ?ops_item <span style=\"BACKGROUND-COLOR: #FFCC99\"> skos:exactMatch ?db_uri </span>.<br> ?db_uri  <span style=\"BACKGROUND-COLOR: #FFFFCC\"> drugbank:biotransformation ?biotransformation </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> drugbank:description ?description </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> drugbank:proteinBinding ?proteinBinding </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> drugbank:toxicity ?toxicity </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> drugbank:meltingPoint ?meltingPoint </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> void:inDataset &lt;http://linkedlifedata.com/resource/drugbank&gt;</span><br><br><hr>",
          "group": "Compound" ,
          "parameters": [
            {
              "name":  "uri" ,
              "description":  "A compound URI. e.g.: http://www.conceptwiki.org/concept/38932552-111f-4a4e-a46a-4ed1d7bdf9d5" ,
              "dataType": "string",
              "required": true,
              "paramType": "query"
            },
            {
              "name": "app_id",
              "description": "Your access application id",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_ids"
            },
            {
              "name": "app_key",
              "description": "Your access application key",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_keys"
            },
            {
              "name": "_format",
              "description": "The desired result format.",
              "allowableValues": {
                "values": [
                  "json",
                  "tsv",
                  "ttl",
                  "xml",
                  "rdf",
                  "rdfjson",
                  "html"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "callback",
              "description": "For JSONP",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "_metadata",
              "description": "Additional metadata to be included with response.",
              "allowableValues": {
                "values": [
                  "execution",
                  "site",
                  "formats",
                  "views",
                  "all"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            }
          ]
        }
      ]
    },
    {
      "path": "/compound/pharmacology/count" ,
      "operations": [
        {
          "httpMethod": "GET",
          "summary":  "Compound Pharmacology Count" ,
          "description":  "The total number of acitivity values in the LDC for a given compound<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<hr>Response template: <hr><br> ?ops_item <span style=\"BACKGROUND-COLOR: #66FFCC\"> ops:compoundPharmacologyTotalResults ?count </span><br><br><hr>",
          "group": "Compound" ,
          "parameters": [
            {
              "name":  "uri" ,
              "description":  "A compound URI. e.g.: http://www.conceptwiki.org/concept/38932552-111f-4a4e-a46a-4ed1d7bdf9d5" ,
              "dataType": "string",
              "required": true,
              "paramType": "query"
            },
            {
              "name": "app_id",
              "description": "Your access application id",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_ids"
            },
            {
              "name": "app_key",
              "description": "Your access application key",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_keys"
            },
            {
              "name":  "assay_organism" ,
              "description":  "A literal organism in ChEMBL." ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name":  "activity_type" ,
              "description":  "One of the activity types listed at /pharmacology/filters/activities" ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name":  "activity_value" ,
              "description":  "Return activity values equal to this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "min-activity_value" ,
              "description":  "Return activity values greater than or equal to this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "minEx-activity_value" ,
              "description":  "Return activity values greater than this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "max-activity_value" ,
              "description":  "Return activity values less than or equal to this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "maxEx-activity_value" ,
              "description":  "Return activity values less than this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "activity_unit" ,
              "description":  "The unit in which {activity_value} is given. See /pharmacology/filters/units/{activity_type} for allowed valued. For e.g. IC50: /pharmacology/filters/units/IC50" ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name": "_format",
              "description": "The desired result format.",
              "allowableValues": {
                "values": [
                  "json",
                  "tsv",
                  "ttl",
                  "xml",
                  "rdf",
                  "rdfjson",
                  "html"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "callback",
              "description": "For JSONP",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "_metadata",
              "description": "Additional metadata to be included with response.",
              "allowableValues": {
                "values": [
                  "execution",
                  "site",
                  "formats",
                  "views",
                  "all"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            }
          ]
        }
      ]
    },
    {
      "path": "/compound/pharmacology" ,
      "operations": [
        {
          "httpMethod": "GET",
          "summary":  "Compound Pharmacology Complete (DEPRECATED)" ,
          "description":  "A complete representation of acitivity values in the LDC for a given compound. Potentially very large result.<hr>",
          "group": "Compound" ,
          "parameters": [
            {
              "name":  "uri" ,
              "description":  "A compound URI. e.g.: http://www.conceptwiki.org/concept/38932552-111f-4a4e-a46a-4ed1d7bdf9d5" ,
              "dataType": "string",
              "required": true,
              "paramType": "query"
            },
            {
              "name": "app_id",
              "description": "Your access application id",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_ids"
            },
            {
              "name": "app_key",
              "description": "Your access application key",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_keys"
            },
            {
              "name":  "assay_organism" ,
              "description":  "A literal organism in ChEMBL." ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name":  "activity_type" ,
              "description":  "One of the activity types listed at /pharmacology/filters/activities" ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name":  "activity_value" ,
              "description":  "Return activity values equal to this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "min-activity_value" ,
              "description":  "Return activity values greater than or equal to this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "minEx-activity_value" ,
              "description":  "Return activity values greater than this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "max-activity_value" ,
              "description":  "Return activity values less than or equal to this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "maxEx-activity_value" ,
              "description":  "Return activity values less than this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "activity_unit" ,
              "description":  "The unit in which {activity_value} is given. See /pharmacology/filters/units/{activity_type} for allowed valued. For e.g. IC50: /pharmacology/filters/units/IC50" ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name": "_format",
              "description": "The desired result format.",
              "allowableValues": {
                "values": [
                  "json",
                  "tsv",
                  "ttl",
                  "xml",
                  "rdf",
                  "rdfjson",
                  "html"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "callback",
              "description": "For JSONP",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "_metadata",
              "description": "Additional metadata to be included with response.",
              "allowableValues": {
                "values": [
                  "execution",
                  "site",
                  "formats",
                  "views",
                  "all"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            }
          ]
        }
      ]
    },
    {
      "path": "/compound/pharmacology/pages" ,
      "operations": [
        {
          "httpMethod": "GET",
          "summary":  "Compound Pharmacology Paginated" ,
          "description":  "A page of items corresponding to acitivity values in the LDC for a given compound<br> &nbsp;&nbsp;&nbsp;&nbsp;<hr>Response template: <hr><br> [] <span style=\"BACKGROUND-COLOR: #66FFCC\"> ops:input ?ops_item </span>.<br> ?item <span style=\"BACKGROUND-COLOR: #66FFCC\"> chembl:forMolecule ?equiv_compound </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> chembl:type ?std_type </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> chembl:relation ?relation </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> chembl:standardValue ?std_value </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> chembl:standardUnits ?std_unit </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> chembl-ops:normalisedValue ?activity_value </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> chembl:onAssay ?equiv_assay </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFCC99\"> cito:citesAsDataSource ?doi </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFCC99\"> bibo:pmid ?pmid </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> void:inDataset &lt;http://data.kasabi.com/dataset/chembl-rdf&gt; </span>.<br> ?equiv_assay <span style=\"BACKGROUND-COLOR: #FFCC99\"> chembl:hasTarget ?equiv_target </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFCC99\"> chembl-ops:organism ?assay_organism </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> chembl:hasDescription ?assay_description  </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> void:inDataset &lt;http://data.kasabi.com/dataset/chembl-rdf&gt; </span>.<br> ?equiv_target <span style=\"BACKGROUND-COLOR: #FFFFCC\"> dc:title ?target_name </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> chembl-ops:organism ?target_organism </span>. <br> ?equiv_compound <span style=\"BACKGROUND-COLOR: #66FFCC\"> skos:exactMatch ?cw_uri </span>.<br> ?cw_uri <span style=\"BACKGROUND-COLOR: #66FFCC\"> skos:prefLabel ?compound_name </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> void:inDataset &lt;http://www.conceptwiki.org/&gt; </span>.<br> ?equiv_compound <span style=\"BACKGROUND-COLOR: #66FFCC\"> skos:exactMatch ?cs_uri </span>.<br> ?cs_uri <span style=\"BACKGROUND-COLOR: #66FFCC\"> chemspider:smiles ?smiles </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> chemspider:inchi ?inchi </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> chemspider:inchikey ?inchiKey</span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> ops:ro5_violations ?num_ro5_violations </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> void:inDataset &lt;http://rdf.chemspider.com/&gt; </span>.<br> ?equiv_compound <span style=\"BACKGROUND-COLOR: #FFFFCC\"> ?bNode1 ?molweight </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> void:inDataset &lt;http://data.kasabi.com/dataset/chembl-rdf&gt; </span>.<br> ?equiv_compound <span style=\"BACKGROUND-COLOR: #FFFFCC\"> skos:exactMatch ?db_uri </span>.<br> ?db_uri <span style=\"BACKGROUND-COLOR: #FFCC99\"> drugbank:drugType ?drugType </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> drugbank:genericName ?drug_name </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> void:inDataset &lt;http://linkedlifedata.com/resource/drugbank&gt; </span><br><br><hr>",
          "group": "Compound" ,
          "parameters": [
            {
              "name":  "uri" ,
              "description":  "A compound URI. e.g.: http://www.conceptwiki.org/concept/38932552-111f-4a4e-a46a-4ed1d7bdf9d5" ,
              "dataType": "string",
              "required": true,
              "paramType": "query"
            },
            {
              "name": "app_id",
              "description": "Your access application id",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_ids"
            },
            {
              "name": "app_key",
              "description": "Your access application key",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_keys"
            },
            {
              "name":  "assay_organism" ,
              "description":  "A literal organism in ChEMBL." ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name":  "activity_type" ,
              "description":  "One of the activity types listed at /pharmacology/filters/activities" ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name":  "activity_value" ,
              "description":  "Return activity values equal to this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "min-activity_value" ,
              "description":  "Return activity values greater than or equal to this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "minEx-activity_value" ,
              "description":  "Return activity values greater than this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "max-activity_value" ,
              "description":  "Return activity values less than or equal to this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "maxEx-activity_value" ,
              "description":  "Return activity values less than this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "activity_unit" ,
              "description":  "The unit in which {activity_value} is given. See /pharmacology/filters/units/{activity_type} for allowed valued. For e.g. IC50: /pharmacology/filters/units/IC50" ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name": "_page",
              "description": "A number; the page that should be viewed",
              "dataType": "integer",
              "paramType": "query"
            },
            {
              "name": "_pageSize",
              "description": "The desired page size. Set to all to retrieve all results in a single page.",
              "dataType": "integer",
              "paramType": "query"
            },
            {
              "name": "_orderBy",
              "description": "The desired variable to sort by. Multiple values can be specified seperated by spaces. Direction of sort can be specified with ASC(?var) and DESC(?var). Default is ascending",
              "allowableValues": {
                "values": [
                  "?activity_value",
                  "DESC(?activity_value)",
                  "?assay_description",
                  "DESC(?assay_description)",
                  "?assay_organism",
                  "DESC(?assay_organism)",
                  "?assay_uri",
                  "DESC(?assay_uri)",
                  "?bNode1",
                  "DESC(?bNode1)",
                  "?chembl_uri",
                  "DESC(?chembl_uri)",
                  "?compound_name",
                  "DESC(?compound_name)",
                  "?cs_uri",
                  "DESC(?cs_uri)",
                  "?cw_uri",
                  "DESC(?cw_uri)",
                  "?db_uri",
                  "DESC(?db_uri)",
                  "?doi",
                  "DESC(?doi)",
                  "?doi_internal",
                  "DESC(?doi_internal)",
                  "?drug_name",
                  "DESC(?drug_name)",
                  "?drugType",
                  "DESC(?drugType)",
                  "?drugType_uri",
                  "DESC(?drugType_uri)",
                  "?equiv_assay",
                  "DESC(?equiv_assay)",
                  "?equiv_compound",
                  "DESC(?equiv_compound)",
                  "?equiv_target",
                  "DESC(?equiv_target)",
                  "?inchi",
                  "DESC(?inchi)",
                  "?inchiKey",
                  "DESC(?inchiKey)",
                  "?inchiKey</span>",
                  "DESC(?inchiKey</span>)",
                  "?item",
                  "DESC(?item)",
                  "?molweight",
                  "DESC(?molweight)",
                  "?num_ro5_violations",
                  "DESC(?num_ro5_violations)",
                  "?ops_item",
                  "DESC(?ops_item)",
                  "?pmid",
                  "DESC(?pmid)",
                  "?relation",
                  "DESC(?relation)",
                  "?smiles",
                  "DESC(?smiles)",
                  "?std_type",
                  "DESC(?std_type)",
                  "?std_unit",
                  "DESC(?std_unit)",
                  "?std_value",
                  "DESC(?std_value)",
                  "?target_name",
                  "DESC(?target_name)",
                  "?target_organism",
                  "DESC(?target_organism)",
                  "?target_uri",
                  "DESC(?target_uri)"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "_format",
              "description": "The desired result format.",
              "allowableValues": {
                "values": [
                  "json",
                  "tsv",
                  "ttl",
                  "xml",
                  "rdf",
                  "rdfjson",
                  "html"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "callback",
              "description": "For JSONP",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "_metadata",
              "description": "Additional metadata to be included with response.",
              "allowableValues": {
                "values": [
                  "execution",
                  "site",
                  "formats",
                  "views",
                  "all"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            }
          ]
        }
      ]
    },
    {
      "path": "/sources" ,
      "operations": [
        {
          "httpMethod": "GET",
          "summary":  "Data Sources" ,
          "description":  "(UNDER DEVELOPMENT) Returns information about currently loaded data sources.<hr>",
          "group": "Data Sources" ,
          "parameters": [
            {
              "name": "app_id",
              "description": "Your access application id",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_ids"
            },
            {
              "name": "app_key",
              "description": "Your access application key",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_keys"
            },
            {
              "name": "_format",
              "description": "The desired result format.",
              "allowableValues": {
                "values": [
                  "json",
                  "tsv",
                  "ttl",
                  "xml",
                  "rdf",
                  "rdfjson",
                  "html"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "callback",
              "description": "For JSONP",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "_metadata",
              "description": "Additional metadata to be included with response.",
              "allowableValues": {
                "values": [
                  "execution",
                  "site",
                  "formats",
                  "views",
                  "all"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            }
          ]
        }
      ]
    },
    {
      "path": "/target/enzyme/root" ,
      "operations": [
        {
          "httpMethod": "GET",
          "summary":  "Get Enzyme Classification Root Classes" ,
          "description":  "A representation of the root classes of the Enzyme Classification.<hr>",
          "group": "Enzyme Classification" ,
          "parameters": [
            {
              "name": "app_id",
              "description": "Your access application id",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_ids"
            },
            {
              "name": "app_key",
              "description": "Your access application key",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_keys"
            },
            {
              "name": "_format",
              "description": "The desired result format.",
              "allowableValues": {
                "values": [
                  "json",
                  "tsv",
                  "ttl",
                  "xml",
                  "rdf",
                  "rdfjson",
                  "html"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "callback",
              "description": "For JSONP",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "_metadata",
              "description": "Additional metadata to be included with response.",
              "allowableValues": {
                "values": [
                  "execution",
                  "site",
                  "formats",
                  "views",
                  "all"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            }
          ]
        }
      ]
    },
    {
      "path": "/target/enzyme/node" ,
      "operations": [
        {
          "httpMethod": "GET",
          "summary":  "Get Enzyme Classification Class" ,
          "description":  "A representation of a given Enzyme Class, its parent and siblings.<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<hr>Response template: <hr><br> ?ops_item <span style=\"BACKGROUND-COLOR: #66FFCC\"> rdfs:subClassOf ?parent </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> uniprot:name ?item_name </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #33CC99\"> ops:sibling ?sibling </span>.<br> ?sibling <span style=\"BACKGROUND-COLOR: #66FFCC\"> uniprot:name ?sibling_name </span>.<br> ?parent <span style=\"BACKGROUND-COLOR: #66FFCC\"> uniprot:name ?parent_name</span><br><br><hr>",
          "group": "Enzyme Classification" ,
          "parameters": [
            {
              "name":  "uri" ,
              "description":  "An Enzyme Class URI. e.g.: http://purl.uniprot.org/enzyme/1.1.1.-" ,
              "dataType": "string",
              "required": true,
              "paramType": "query"
            },
            {
              "name": "app_id",
              "description": "Your access application id",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_ids"
            },
            {
              "name": "app_key",
              "description": "Your access application key",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_keys"
            },
            {
              "name": "_format",
              "description": "The desired result format.",
              "allowableValues": {
                "values": [
                  "json",
                  "tsv",
                  "ttl",
                  "xml",
                  "rdf",
                  "rdfjson",
                  "html"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "callback",
              "description": "For JSONP",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "_metadata",
              "description": "Additional metadata to be included with response.",
              "allowableValues": {
                "values": [
                  "execution",
                  "site",
                  "formats",
                  "views",
                  "all"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            }
          ]
        }
      ]
    },
    {
      "path": "/target/enzyme/members" ,
      "operations": [
        {
          "httpMethod": "GET",
          "summary":  "Get Enzyme Classification Class Members" ,
          "description":  "A representation of all members of a given Enzyme Class.<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<hr>Response template: <hr><br> ?ops_item <span style=\"BACKGROUND-COLOR: #33CC99\"> ops:has_member ?member </span>.<br> ?member <span style=\"BACKGROUND-COLOR: #66FFCC\"> uniprot:name ?member_name </span><br><br><hr>",
          "group": "Enzyme Classification" ,
          "parameters": [
            {
              "name":  "uri" ,
              "description":  "An Enzyme Class URI. e.g.: http://purl.uniprot.org/enzyme/1.1.1.-" ,
              "dataType": "string",
              "required": true,
              "paramType": "query"
            },
            {
              "name": "app_id",
              "description": "Your access application id",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_ids"
            },
            {
              "name": "app_key",
              "description": "Your access application key",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_keys"
            },
            {
              "name": "_format",
              "description": "The desired result format.",
              "allowableValues": {
                "values": [
                  "json",
                  "tsv",
                  "ttl",
                  "xml",
                  "rdf",
                  "rdfjson",
                  "html"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "callback",
              "description": "For JSONP",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "_metadata",
              "description": "Additional metadata to be included with response.",
              "allowableValues": {
                "values": [
                  "execution",
                  "site",
                  "formats",
                  "views",
                  "all"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            }
          ]
        }
      ]
    },
    {
      "path": "/target/enzyme/pharmacology/count" ,
      "operations": [
        {
          "httpMethod": "GET",
          "summary":  "Enzyme Pharmacology Count" ,
          "description":  "The total number of acitivity values in the LDC for a given EC class<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<hr>Response template: <hr><br> ?ops_item <span style=\"BACKGROUND-COLOR: #66FFCC\"> ops:enzymePharmacologyTotalResults ?count </span><br><br><hr>",
          "group": "Enzyme Classification" ,
          "parameters": [
            {
              "name":  "uri" ,
              "description":  "An Enzyme Class URI. e.g.: http://purl.uniprot.org/enzyme/1.1.1.-" ,
              "dataType": "string",
              "required": true,
              "paramType": "query"
            },
            {
              "name": "app_id",
              "description": "Your access application id",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_ids"
            },
            {
              "name": "app_key",
              "description": "Your access application key",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_keys"
            },
            {
              "name":  "assay_organism" ,
              "description":  "A literal organism in ChEMBL." ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name":  "activity_type" ,
              "description":  "One of the activity types listed at /pharmacology/filters/activities" ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name":  "activity_value" ,
              "description":  "Return activity values equal to this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "min-activity_value" ,
              "description":  "Return activity values greater than or equal to this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "minEx-activity_value" ,
              "description":  "Return activity values greater than this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "max-activity_value" ,
              "description":  "Return activity values less than or equal to this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "maxEx-activity_value" ,
              "description":  "Return activity values less than this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "activity_unit" ,
              "description":  "The unit in which {activity_value} is given. See /pharmacology/filters/units/{activity_type} for allowed valued. For e.g. IC50: /pharmacology/filters/units/IC50" ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name": "_format",
              "description": "The desired result format.",
              "allowableValues": {
                "values": [
                  "json",
                  "tsv",
                  "ttl",
                  "xml",
                  "rdf",
                  "rdfjson",
                  "html"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "callback",
              "description": "For JSONP",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "_metadata",
              "description": "Additional metadata to be included with response.",
              "allowableValues": {
                "values": [
                  "execution",
                  "site",
                  "formats",
                  "views",
                  "all"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            }
          ]
        }
      ]
    },
    {
      "path": "/target/enzyme/pharmacology" ,
      "operations": [
        {
          "httpMethod": "GET",
          "summary":  "Enzyme Pharmacology Complete (DEPRECATED)" ,
          "description":  "A complete representation of acitivity values in the LDC for a given Enzyme Class. Potentially extremely large result. Example will use up 2GB of RAM in Chrome.<hr>",
          "group": "Enzyme Classification" ,
          "parameters": [
            {
              "name":  "uri" ,
              "description":  "An Enzyme Class URI. e.g.: http://purl.uniprot.org/enzyme/1.1.1.-" ,
              "dataType": "string",
              "required": true,
              "paramType": "query"
            },
            {
              "name": "app_id",
              "description": "Your access application id",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_ids"
            },
            {
              "name": "app_key",
              "description": "Your access application key",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_keys"
            },
            {
              "name":  "assay_organism" ,
              "description":  "A literal organism in ChEMBL." ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name":  "activity_type" ,
              "description":  "One of the activity types listed at /pharmacology/filters/activities" ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name":  "activity_value" ,
              "description":  "Return activity values equal to this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "min-activity_value" ,
              "description":  "Return activity values greater than or equal to this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "minEx-activity_value" ,
              "description":  "Return activity values greater than this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "max-activity_value" ,
              "description":  "Return activity values less than or equal to this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "maxEx-activity_value" ,
              "description":  "Return activity values less than this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "activity_unit" ,
              "description":  "The unit in which {activity_value} is given. See /pharmacology/filters/units/{activity_type} for allowed valued. For e.g. IC50: /pharmacology/filters/units/IC50" ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name": "_format",
              "description": "The desired result format.",
              "allowableValues": {
                "values": [
                  "json",
                  "tsv",
                  "ttl",
                  "xml",
                  "rdf",
                  "rdfjson",
                  "html"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "callback",
              "description": "For JSONP",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "_metadata",
              "description": "Additional metadata to be included with response.",
              "allowableValues": {
                "values": [
                  "execution",
                  "site",
                  "formats",
                  "views",
                  "all"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            }
          ]
        }
      ]
    },
    {
      "path": "/target/enzyme/pharmacology/pages" ,
      "operations": [
        {
          "httpMethod": "GET",
          "summary":  "Enzyme Pharmacology Paginated" ,
          "description":  "A page of items corresponding to acitivity values in the LDC for a given Enzyme Classification class<br> &nbsp;&nbsp;&nbsp;&nbsp;<hr>Response template: <hr><br> [] <span style=\"BACKGROUND-COLOR: #66FFCC\"> ops:input ?ops_item </span>.<br> ?item <span style=\"BACKGROUND-COLOR: #66FFCC\"> chembl:forMolecule ?equiv_compound</span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> chembl:type ?std_type</span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> chembl:relation ?relation</span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> chembl:standardValue ?std_value</span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> chembl:standardUnits ?std_unit</span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> chembl-ops:normalisedValue ?activity_value </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> chembl:onAssay ?equiv_assay </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFCC99\"> chembl:citesAsDataSource ?doi </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFCC99\"> bibo:pmid ?pmid </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> void:inDataset <http://data.kasabi</span>.com/dataset/chembl-rdf> </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #33CC99\"> chembl:hasTarget ?equiv_target </span>.<br> ?equiv_assay <span style=\"BACKGROUND-COLOR: #FFFFCC\"> chembl:hasDescription ?assay_description </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFCC99\"> chembl:organism ?assay_organism </span>.<br> ?equiv_target <span style=\"BACKGROUND-COLOR: #FFFFCC\"> dc:title ?target_name</span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> chembl-ops:organism ?target_organism </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #33CC99\"> skos:exactMatch ?subclass </span>. <br> ?equiv_compound <span style=\"BACKGROUND-COLOR: #FFFFCC\"> ?node1 ?molweight </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> skos:exactMatch ?compound_cs </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> skos:exactMatch ?compound_cw </span>.<br> ?compound_cs <span style=\"BACKGROUND-COLOR: #66FFCC\"> chemspider:smiles ?smiles </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> chemspider:inchi ?inchi </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> chemspider:inchikey ?inchi_key</span>;<br>         <span style=\"BACKGROUND-COLOR: #FFFFCC\"> ops:ro5_violations ?num_ro5_violations </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> void:inDataset &lt;http://rdf.chemspider.com/&gt; </span>.<br> ?compound_cw <span style=\"BACKGROUND-COLOR: #66FFCC\"> skos:prefLabel ?compound_name </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> void:inDataset &lt;http://www.conceptwiki.org/&gt; </span><br><br><hr>",
          "group": "Enzyme Classification" ,
          "parameters": [
            {
              "name":  "uri" ,
              "description":  "An Enzyme Class URI. e.g.: http://purl.uniprot.org/enzyme/1.1.1.-" ,
              "dataType": "string",
              "required": true,
              "paramType": "query"
            },
            {
              "name": "app_id",
              "description": "Your access application id",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_ids"
            },
            {
              "name": "app_key",
              "description": "Your access application key",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_keys"
            },
            {
              "name":  "assay_organism" ,
              "description":  "A literal organism in ChEMBL." ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name":  "activity_type" ,
              "description":  "One of the activity types listed at /pharmacology/filters/activities" ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name":  "activity_value" ,
              "description":  "Return activity values equal to this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "min-activity_value" ,
              "description":  "Return activity values greater than or equal to this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "minEx-activity_value" ,
              "description":  "Return activity values greater than this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "max-activity_value" ,
              "description":  "Return activity values less than or equal to this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "maxEx-activity_value" ,
              "description":  "Return activity values less than this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "activity_unit" ,
              "description":  "The unit in which {activity_value} is given. See /pharmacology/filters/units/{activity_type} for allowed valued. For e.g. IC50: /pharmacology/filters/units/IC50" ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name": "_page",
              "description": "A number; the page that should be viewed",
              "dataType": "integer",
              "paramType": "query"
            },
            {
              "name": "_pageSize",
              "description": "The desired page size. Set to all to retrieve all results in a single page.",
              "dataType": "integer",
              "paramType": "query"
            },
            {
              "name": "_orderBy",
              "description": "The desired variable to sort by. Multiple values can be specified seperated by spaces. Direction of sort can be specified with ASC(?var) and DESC(?var). Default is ascending",
              "allowableValues": {
                "values": [
                  "?activity_value",
                  "DESC(?activity_value)",
                  "?assay_description",
                  "DESC(?assay_description)",
                  "?assay_organism",
                  "DESC(?assay_organism)",
                  "?assay_uri",
                  "DESC(?assay_uri)",
                  "?compound_chembl",
                  "DESC(?compound_chembl)",
                  "?compound_cs",
                  "DESC(?compound_cs)",
                  "?compound_cw",
                  "DESC(?compound_cw)",
                  "?compound_name",
                  "DESC(?compound_name)",
                  "?doi",
                  "DESC(?doi)",
                  "?doi_internal",
                  "DESC(?doi_internal)",
                  "?equiv_assay",
                  "DESC(?equiv_assay)",
                  "?equiv_compound",
                  "DESC(?equiv_compound)",
                  "?equiv_compound</span>",
                  "DESC(?equiv_compound</span>)",
                  "?equiv_target",
                  "DESC(?equiv_target)",
                  "?inchi",
                  "DESC(?inchi)",
                  "?inchi_key",
                  "DESC(?inchi_key)",
                  "?inchi_key</span>",
                  "DESC(?inchi_key</span>)",
                  "?item",
                  "DESC(?item)",
                  "?molweight",
                  "DESC(?molweight)",
                  "?node1",
                  "DESC(?node1)",
                  "?num_ro5_violations",
                  "DESC(?num_ro5_violations)",
                  "?ops_item",
                  "DESC(?ops_item)",
                  "?pmid",
                  "DESC(?pmid)",
                  "?relation",
                  "DESC(?relation)",
                  "?relation</span>",
                  "DESC(?relation</span>)",
                  "?smiles",
                  "DESC(?smiles)",
                  "?std_type",
                  "DESC(?std_type)",
                  "?std_type</span>",
                  "DESC(?std_type</span>)",
                  "?std_unit",
                  "DESC(?std_unit)",
                  "?std_unit</span>",
                  "DESC(?std_unit</span>)",
                  "?std_value",
                  "DESC(?std_value)",
                  "?std_value</span>",
                  "DESC(?std_value</span>)",
                  "?subclass",
                  "DESC(?subclass)",
                  "?target_chembl",
                  "DESC(?target_chembl)",
                  "?target_name",
                  "DESC(?target_name)",
                  "?target_name</span>",
                  "DESC(?target_name</span>)",
                  "?target_organism",
                  "DESC(?target_organism)"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "_format",
              "description": "The desired result format.",
              "allowableValues": {
                "values": [
                  "json",
                  "tsv",
                  "ttl",
                  "xml",
                  "rdf",
                  "rdfjson",
                  "html"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "callback",
              "description": "For JSONP",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "_metadata",
              "description": "Additional metadata to be included with response.",
              "allowableValues": {
                "values": [
                  "execution",
                  "site",
                  "formats",
                  "views",
                  "all"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            }
          ]
        }
      ]
    },
    {
      "path": "/pathway" ,
      "operations": [
        {
          "httpMethod": "GET",
          "summary":  "Pathway Information" ,
          "description":  "Returns information about a single pathway that corresponds to {uri}.<hr>",
          "group": "Pathway" ,
          "parameters": [
            {
              "name":  "uri" ,
              "description":  "A Pathway URI. e.g.: http://rdf.wikipathways.org/WP1019_r48131" ,
              "dataType": "string",
              "required": true,
              "paramType": "query"
            },
            {
              "name": "app_id",
              "description": "Your access application id",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_ids"
            },
            {
              "name": "app_key",
              "description": "Your access application key",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_keys"
            },
            {
              "name": "_format",
              "description": "The desired result format.",
              "allowableValues": {
                "values": [
                  "json",
                  "tsv",
                  "ttl",
                  "xml",
                  "rdf",
                  "rdfjson",
                  "html"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "callback",
              "description": "For JSONP",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "_metadata",
              "description": "Additional metadata to be included with response.",
              "allowableValues": {
                "values": [
                  "execution",
                  "site",
                  "formats",
                  "views",
                  "all"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            }
          ]
        }
      ]
    },
    {
      "path": "/pharmacology/filters/activities" ,
      "operations": [
        {
          "httpMethod": "GET",
          "summary":  "Activity types" ,
          "description":  "A list of activities type which have been normalised<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<hr>Response template: <hr><br> <http://data.kasabi.com/dataset/chembl-rdf> <span style=\"BACKGROUND-COLOR: #33CC99\"> ops:normalised_activity_type ?act_type </span>.<br> ?act_type <span style=\"BACKGROUND-COLOR: #66FFCC\"> rdfs:label ?act_label</span><br><br><hr>",
          "group": "Pharmacology Filters" ,
          "parameters": [
            {
              "name": "app_id",
              "description": "Your access application id",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_ids"
            },
            {
              "name": "app_key",
              "description": "Your access application key",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_keys"
            },
            {
              "name": "_format",
              "description": "The desired result format.",
              "allowableValues": {
                "values": [
                  "json",
                  "tsv",
                  "ttl",
                  "xml",
                  "rdf",
                  "rdfjson",
                  "html"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "callback",
              "description": "For JSONP",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "_metadata",
              "description": "Additional metadata to be included with response.",
              "allowableValues": {
                "values": [
                  "execution",
                  "site",
                  "formats",
                  "views",
                  "all"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            }
          ]
        }
      ]
    },
    {
      "path": "/pharmacology/filters/units/" ,
      "operations": [
        {
          "httpMethod": "GET",
          "summary":  "Units for activity type" ,
          "description":  "A list of units that activities of the specified type have been normalised to.<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<hr>Response template: <hr><br> ?act_type <span style=\"BACKGROUND-COLOR: #33CC99\"> qudt:unit ?unit </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> rdfs:label ?act_label </span>. <br> ?unit <span style=\"BACKGROUND-COLOR: #FFFFCC\"> rdfs:label ?unit_label</span><br><br><hr>",
          "group": "Pharmacology Filters" ,
          "parameters": [
            {
              "name": "app_id",
              "description": "Your access application id",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_ids"
            },
            {
              "name": "app_key",
              "description": "Your access application key",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_keys"
            },
            {
              "name":  "act_type" ,
              "description":  "http://www.openphacts.org/chembl/onto/#{act_name}" ,
              "required": true,
              "paramType": "path",
              "dataType": "string"
            },
            {
              "name": "_format",
              "description": "The desired result format.",
              "allowableValues": {
                "values": [
                  "json",
                  "tsv",
                  "ttl",
                  "xml",
                  "rdf",
                  "rdfjson",
                  "html"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "callback",
              "description": "For JSONP",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "_metadata",
              "description": "Additional metadata to be included with response.",
              "allowableValues": {
                "values": [
                  "execution",
                  "site",
                  "formats",
                  "views",
                  "all"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            }
          ]
        }
      ]
    },
    {
      "path": "/target" ,
      "operations": [
        {
          "httpMethod": "GET",
          "summary":  "Target Information" ,
          "description":  "Returns information about a single target that corresponds to {uri}.<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<hr>Response template: <hr><br> ?ops_item <span style=\"BACKGROUND-COLOR: #66FFCC\"> skos:exactMatch ?cw_uri </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> skos:exactMatch ?uniprot_uri </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> skos:exactMatch ?equiv_target </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> skos:exactMatch ?db_uri </span>.<br> ?cw_uri <span style=\"BACKGROUND-COLOR: #66FFCC\"> skos:prefLabel ?target_name </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> void:inDataset &lt;http://www.conceptwiki.org&gt; </span>.<br> ?uniprot_uri <span style=\"BACKGROUND-COLOR: #66FFCC\"> uniprot:existence ?existence </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> uniprot:organism ?organism </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> uniprot:sequence ?sequence </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> uniprot:Function_Annotation ?function </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFCC99\"> uniprot:classifiedWith ?class </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFCC99\"> uniprot:alternativeName ?alt_names </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFCC99\"> rdfs:seeAlso ?target_pdb </span>;<br>         <span style=\"BACKGROUND-COLOR: #66FFCC\"> void:inDataset &lt;http://purl.uniprot.org&gt; </span> .<br> ?equiv_target <span style=\"BACKGROUND-COLOR: #FFCC99\"> chembl:hasKeyword ?keywords </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> chembl:hasDescription ?description </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFCC99\"> rdfs:subClassOf ?target_type </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFCC99\"> rdfs:label ?synonyms </span>;&nbsp;&nbsp;&nbsp;&nbsp;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> void:inDataset &lt;http://data.kasabi.com/dataset/chembl-rdf&gt;</span>.<br> ?db_uri <span style=\"BACKGROUND-COLOR: #FFCC99\"> drugbank:cellularLocation ?cellularLocation </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> drugbank:molecularWeight ?molecularWeight </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> drugbank:numberOfResidues ?numberOfResidues </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> drugbank:theoreticalPi ?theoreticalPi </span>; <br>         <span style=\"BACKGROUND-COLOR: #FFFFCC\"> void:inDataset &lt;http://linkedlifedata.com/resource/drugbank&gt;</span><br><br><hr>",
          "group": "Target" ,
          "parameters": [
            {
              "name":  "uri" ,
              "description":  "A target URI. e.g.: http://www.conceptwiki.org/concept/00059958-a045-4581-9dc5-e5a08bb0c291" ,
              "dataType": "string",
              "required": true,
              "paramType": "query"
            },
            {
              "name": "app_id",
              "description": "Your access application id",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_ids"
            },
            {
              "name": "app_key",
              "description": "Your access application key",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_keys"
            },
            {
              "name": "_format",
              "description": "The desired result format.",
              "allowableValues": {
                "values": [
                  "json",
                  "tsv",
                  "ttl",
                  "xml",
                  "rdf",
                  "rdfjson",
                  "html"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "callback",
              "description": "For JSONP",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "_metadata",
              "description": "Additional metadata to be included with response.",
              "allowableValues": {
                "values": [
                  "execution",
                  "site",
                  "formats",
                  "views",
                  "all"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            }
          ]
        }
      ]
    },
    {
      "path": "/target/pharmacology/count" ,
      "operations": [
        {
          "httpMethod": "GET",
          "summary":  "Target Pharmacology Count" ,
          "description":  "The total number of acitivity values in the LDC for a given target<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<hr>Response template: <hr><br> ?ops_item <span style=\"BACKGROUND-COLOR: #66FFCC\"> ops:targetPharmacologyTotalResults ?count </span><br><br><hr>",
          "group": "Target" ,
          "parameters": [
            {
              "name":  "uri" ,
              "description":  "A target URI. e.g.: http://www.conceptwiki.org/concept/00059958-a045-4581-9dc5-e5a08bb0c291" ,
              "dataType": "string",
              "required": true,
              "paramType": "query"
            },
            {
              "name": "app_id",
              "description": "Your access application id",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_ids"
            },
            {
              "name": "app_key",
              "description": "Your access application key",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_keys"
            },
            {
              "name":  "assay_organism" ,
              "description":  "A literal organism in ChEMBL." ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name":  "activity_type" ,
              "description":  "One of the activity types listed at /pharmacology/filters/activities" ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name":  "activity_value" ,
              "description":  "Return activity values equal to this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "min-activity_value" ,
              "description":  "Return activity values greater than or equal to this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "minEx-activity_value" ,
              "description":  "Return activity values greater than this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "max-activity_value" ,
              "description":  "Return activity values less than or equal to this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "maxEx-activity_value" ,
              "description":  "Return activity values less than this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "activity_unit" ,
              "description":  "The unit in which {activity_value} is given. See /pharmacology/filters/units/{activity_type} for allowed valued. For e.g. IC50: /pharmacology/filters/units/IC50" ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name": "_format",
              "description": "The desired result format.",
              "allowableValues": {
                "values": [
                  "json",
                  "tsv",
                  "ttl",
                  "xml",
                  "rdf",
                  "rdfjson",
                  "html"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "callback",
              "description": "For JSONP",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "_metadata",
              "description": "Additional metadata to be included with response.",
              "allowableValues": {
                "values": [
                  "execution",
                  "site",
                  "formats",
                  "views",
                  "all"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            }
          ]
        }
      ]
    },
    {
      "path": "/target/pharmacology" ,
      "operations": [
        {
          "httpMethod": "GET",
          "summary":  "Target Pharmacology Complete (DEPRECATED)" ,
          "description":  "A complete representation of acitivity values in the LDC for a given target. Potentially large result.<hr>",
          "group": "Target" ,
          "parameters": [
            {
              "name":  "uri" ,
              "description":  "A target URI. e.g.: http://www.conceptwiki.org/concept/00059958-a045-4581-9dc5-e5a08bb0c291" ,
              "dataType": "string",
              "required": true,
              "paramType": "query"
            },
            {
              "name": "app_id",
              "description": "Your access application id",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_ids"
            },
            {
              "name": "app_key",
              "description": "Your access application key",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_keys"
            },
            {
              "name":  "assay_organism" ,
              "description":  "A literal organism in ChEMBL." ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name":  "activity_type" ,
              "description":  "One of the activity types listed at /pharmacology/filters/activities" ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name":  "activity_value" ,
              "description":  "Return activity values equal to this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "min-activity_value" ,
              "description":  "Return activity values greater than or equal to this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "minEx-activity_value" ,
              "description":  "Return activity values greater than this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "max-activity_value" ,
              "description":  "Return activity values less than or equal to this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "maxEx-activity_value" ,
              "description":  "Return activity values less than this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "activity_unit" ,
              "description":  "The unit in which {activity_value} is given. See /pharmacology/filters/units/{activity_type} for allowed valued. For e.g. IC50: /pharmacology/filters/units/IC50" ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name": "_format",
              "description": "The desired result format.",
              "allowableValues": {
                "values": [
                  "json",
                  "tsv",
                  "ttl",
                  "xml",
                  "rdf",
                  "rdfjson",
                  "html"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "callback",
              "description": "For JSONP",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "_metadata",
              "description": "Additional metadata to be included with response.",
              "allowableValues": {
                "values": [
                  "execution",
                  "site",
                  "formats",
                  "views",
                  "all"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            }
          ]
        }
      ]
    },
    {
      "path": "/target/pharmacology/pages" ,
      "operations": [
        {
          "httpMethod": "GET",
          "summary":  "Target Pharmacology Paginated" ,
          "description":  "A page of items corresponding to acitivity values in the LDC for a given target<br> &nbsp;&nbsp;&nbsp;&nbsp;<hr>Response template: <hr><br> [] <span style=\"BACKGROUND-COLOR: #66FFCC\"> ops:input ?ops_item </span>.<br> ?item <span style=\"BACKGROUND-COLOR: #66FFCC\"> chembl:forMolecule ?equiv_compound</span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> chembl:type ?std_type</span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> chembl:relation ?relation</span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> chembl:standardValue ?std_value</span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> chembl:standardUnits ?std_unit</span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> chembl-ops:normalisedValue ?activity_value </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> chembl:onAssay ?equiv_assay </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFCC99\"> bibo:pmid ?pmid </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFCC99\"> chembl:citesAsDataSource ?doi </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> void:inDataset &lt;http://data.kasabi.com/dataset/chembl-rdf&gt; </span>.<br> ?equiv_assay <span style=\"BACKGROUND-COLOR: #66FFCC\"> chembl:hasTarget ?equiv_target </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFCC99\"> chembl:organism ?assay_organism </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> chembl:hasDescription ?assay_description </span>;<br>         <span style=\"BACKGROUND-COLOR: #66FFCC\"> void:inDataset &lt;http://data.kasabi.com/dataset/chembl-rdf&gt; </span>.<br> ?equiv_target <span style=\"BACKGROUND-COLOR: #FFFFCC\"> ops:target_organism ?target_organism </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> skos:exactMatch ?cw_uri </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> void:inDataset &lt;http://data.kasabi.com/dataset/chembl-rdf&gt; </span>.<br> ?cw_uri <span style=\"BACKGROUND-COLOR: #66FFCC\"> skos:prefLabel ?target_name </span>;<br>         <span style=\"BACKGROUND-COLOR: #66FFCC\"> void:inDataset &lt;http://www.conceptwiki.org/&gt; </span>.<br> ?equiv_compound <span style=\"BACKGROUND-COLOR: #FFFFCC\"> ?node1 ?molweight </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> skos:exactMatch ?compound_cs </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> skos:exactMatch ?compound_cw </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> void:inDataset &lt;http://data.kasabi.com/dataset/chembl-rdf&gt; </span>.<br> ?compound_cs <span style=\"BACKGROUND-COLOR: #66FFCC\"> chemspider:smiles ?smiles </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> chemspider:inchi ?inchi </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> chemspider:inchikey ?inchi_key</span>;<br>         <span style=\"BACKGROUND-COLOR: #FFFFCC\"> ops:ro5_violations ?num_ro5_violations </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> void:inDataset &lt;http://rdf.chemspider.com/&gt; </span>.<br> ?compound_cw <span style=\"BACKGROUND-COLOR: #66FFCC\"> skos:prefLabel ?compound_name </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> void:inDataset &lt;http://www.conceptwiki.org/&gt; </span><br><br><hr>",
          "group": "Target" ,
          "parameters": [
            {
              "name":  "uri" ,
              "description":  "A target URI. e.g.: http://www.conceptwiki.org/concept/00059958-a045-4581-9dc5-e5a08bb0c291" ,
              "dataType": "string",
              "required": true,
              "paramType": "query"
            },
            {
              "name": "app_id",
              "description": "Your access application id",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_ids"
            },
            {
              "name": "app_key",
              "description": "Your access application key",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_keys"
            },
            {
              "name":  "assay_organism" ,
              "description":  "A literal organism in ChEMBL." ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name":  "activity_type" ,
              "description":  "One of the activity types listed at /pharmacology/filters/activities" ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name":  "activity_value" ,
              "description":  "Return activity values equal to this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "min-activity_value" ,
              "description":  "Return activity values greater than or equal to this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "minEx-activity_value" ,
              "description":  "Return activity values greater than this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "max-activity_value" ,
              "description":  "Return activity values less than or equal to this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "maxEx-activity_value" ,
              "description":  "Return activity values less than this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "activity_unit" ,
              "description":  "The unit in which {activity_value} is given. See /pharmacology/filters/units/{activity_type} for allowed valued. For e.g. IC50: /pharmacology/filters/units/IC50" ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name": "_page",
              "description": "A number; the page that should be viewed",
              "dataType": "integer",
              "paramType": "query"
            },
            {
              "name": "_pageSize",
              "description": "The desired page size. Set to all to retrieve all results in a single page.",
              "dataType": "integer",
              "paramType": "query"
            },
            {
              "name": "_orderBy",
              "description": "The desired variable to sort by. Multiple values can be specified seperated by spaces. Direction of sort can be specified with ASC(?var) and DESC(?var). Default is ascending",
              "allowableValues": {
                "values": [
                  "?activity_value",
                  "DESC(?activity_value)",
                  "?assay_description",
                  "DESC(?assay_description)",
                  "?assay_organism",
                  "DESC(?assay_organism)",
                  "?assay_uri",
                  "DESC(?assay_uri)",
                  "?chembl_uri",
                  "DESC(?chembl_uri)",
                  "?compound_chembl",
                  "DESC(?compound_chembl)",
                  "?compound_cs",
                  "DESC(?compound_cs)",
                  "?compound_cw",
                  "DESC(?compound_cw)",
                  "?compound_name",
                  "DESC(?compound_name)",
                  "?cw_uri",
                  "DESC(?cw_uri)",
                  "?doi",
                  "DESC(?doi)",
                  "?doi_internal",
                  "DESC(?doi_internal)",
                  "?equiv_assay",
                  "DESC(?equiv_assay)",
                  "?equiv_compound",
                  "DESC(?equiv_compound)",
                  "?equiv_compound</span>",
                  "DESC(?equiv_compound</span>)",
                  "?equiv_target",
                  "DESC(?equiv_target)",
                  "?inchi",
                  "DESC(?inchi)",
                  "?inchi_key",
                  "DESC(?inchi_key)",
                  "?inchi_key</span>",
                  "DESC(?inchi_key</span>)",
                  "?item",
                  "DESC(?item)",
                  "?molweight",
                  "DESC(?molweight)",
                  "?node1",
                  "DESC(?node1)",
                  "?num_ro5_violations",
                  "DESC(?num_ro5_violations)",
                  "?ops_item",
                  "DESC(?ops_item)",
                  "?pmid",
                  "DESC(?pmid)",
                  "?relation",
                  "DESC(?relation)",
                  "?relation</span>",
                  "DESC(?relation</span>)",
                  "?smiles",
                  "DESC(?smiles)",
                  "?std_type",
                  "DESC(?std_type)",
                  "?std_type</span>",
                  "DESC(?std_type</span>)",
                  "?std_unit",
                  "DESC(?std_unit)",
                  "?std_unit</span>",
                  "DESC(?std_unit</span>)",
                  "?std_value",
                  "DESC(?std_value)",
                  "?std_value</span>",
                  "DESC(?std_value</span>)",
                  "?target_name",
                  "DESC(?target_name)",
                  "?target_organism",
                  "DESC(?target_organism)"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "_format",
              "description": "The desired result format.",
              "allowableValues": {
                "values": [
                  "json",
                  "tsv",
                  "ttl",
                  "xml",
                  "rdf",
                  "rdfjson",
                  "html"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "callback",
              "description": "For JSONP",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "_metadata",
              "description": "Additional metadata to be included with response.",
              "allowableValues": {
                "values": [
                  "execution",
                  "site",
                  "formats",
                  "views",
                  "all"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            }
          ]
        }
      ]
    },
  ]
}
